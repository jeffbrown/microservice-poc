buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.google.cloud.tools:appengine-gradle-plugin:1.3.3'
    }
}

plugins {
    id "groovy"
    id "com.github.johnrengelman.shadow" version "5.0.0"
    id "application"
}

apply plugin: 'com.google.cloud.tools.appengine'

version "0.1"
group "microservice.poc"

repositories {
    mavenCentral()
    maven { url "https://jcenter.bintray.com" }
}

configurations {
    // for dependencies that are needed for development only
    developmentOnly 
}

dependencies {
    compileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    compileOnly "io.micronaut:micronaut-inject-groovy"
    implementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    implementation "io.micronaut:micronaut-runtime-groovy"
    implementation "io.micronaut:micronaut-validation"
    annotationProcessor "io.micronaut:micronaut-security:1.2.2"
    implementation "io.micronaut:micronaut-security-jwt"
    implementation "io.micronaut:micronaut-http-client"
    implementation "io.micronaut.configuration:micronaut-hibernate-validator"
    implementation "io.micronaut.configuration:micronaut-hibernate-gorm"
    implementation "io.micronaut:micronaut-http-server-netty"
    runtimeOnly "ch.qos.logback:logback-classic:1.2.3"
    runtimeOnly "com.h2database:h2"
    runtimeOnly "org.apache.tomcat:tomcat-jdbc"
    testAnnotationProcessor "io.micronaut:micronaut-inject-java:$micronautVersion"
    testCompileOnly platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation platform("io.micronaut:micronaut-bom:$micronautVersion")
    testImplementation("org.spockframework:spock-core") {
        exclude group: "org.codehaus.groovy", module: "groovy-all"
    }
    testImplementation "io.micronaut:micronaut-inject-groovy"
    testImplementation "io.micronaut.test:micronaut-test-spock"
    testImplementation "io.micronaut.test:micronaut-test-junit5"
    testImplementation "org.junit.jupiter:junit-jupiter-api"
    testRuntimeOnly "org.junit.vintage:junit-vintage-engine:5.5.0"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine"

    compile 'org.codehaus.groovy:groovy-templates:2.5.0-beta-2'
    compile "org.pac4j:pac4j-core:${pac4jVersion}"
    compile "org.springframework.security:spring-security-crypto:${springSecurityCryptoVersion}"
    runtime 'com.google.cloud.sql:postgres-socket-factory:1.0.5'
    runtime 'org.postgresql:postgresql:42.2.2'
    compile 'com.sendgrid:sendgrid-java:2.2.2'
    testCompile "io.micronaut:micronaut-discovery-client"
    testCompile "io.micronaut:micronaut-inject-groovy"

}

test.classpath += configurations.developmentOnly

mainClassName = "people.Application"

tasks.withType(GroovyCompile) {
    groovyOptions.forkOptions.jvmArgs.add('-Dgroovy.parameters=true')
}

shadowJar {
    mergeServiceFiles()
}

run.classpath += configurations.developmentOnly
run.jvmArgs('-noverify', '-XX:TieredStopAtLevel=1', '-Dcom.sun.management.jmxremote')

appengine {
    stage {
        artifact = 'build/libs/microservice-poc-all.jar'
    }
    deploy {
        stopPreviousVersion = true
        promote = true
        project = 'microservice-poc-202623'
    }
}
